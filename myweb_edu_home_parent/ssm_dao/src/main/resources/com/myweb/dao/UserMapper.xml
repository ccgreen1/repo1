<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myweb.dao.UserMapper">

<!--    用户分页多条件组合查询-->
    <select id="findAllUserByPage" parameterType="com.myweb.domain.UserVO" resultType="com.myweb.domain.User">
        select * from user
        <where>
            <if test="true">
<!--                没有被逻辑删除-->
                and is_del != 1
            </if>
            <if test="username !=null and username !=''">
                and name like concat('%',#{username},'%')
            </if>
            <if test="createTime !=null and endCreateTime !=null">
                and create_time BETWEEN #{createTime} AND #{endCreateTime}
            </if>
        </where>
    </select>

    <update id="updateUserStatus" parameterType="com.myweb.domain.User">
        update user set status = #{status},update_time = #{update_time} where id = #{id};
    </update>

    <select id="login" parameterType="com.myweb.domain.User" resultType="com.myweb.domain.User">
        select * from user where phone = #{phone}
    </select>

<!--    根据用户ID查询光联角色信息--> <!--    根据用户id获取当前用户拥有的角色-->
    <select id="findUserRelationRoleById" parameterType="int" resultType="com.myweb.domain.Role">
        SELECT
        r.id,
        r.code,
        r.name,
        r.description
        FROM roles r
        INNER JOIN user_role_relation ur ON r.`id` = ur.`role_id`
        INNER JOIN USER u ON ur.`user_id` = u.`id`
        WHERE u.`id` = #{id}
<!--        where ur.user_id = #{userid}-->
    </select>

    <delete id="deleteUserRelationRoleById" parameterType="int">
        delete from user_role_relation where user_id = #{userId}
    </delete>


    <insert id="insertUserRelationRoleById" parameterType="com.myweb.domain.Role_menu_relation">
        insert into user_role_relation values(null,#{userId},#{roleId},#
        {createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>


<!--    根据角色信息（ID）查询角色所拥有的顶级菜单-->
    <select id="findParentMenuByRoleId" parameterType="java.util.List" resultType="com.myweb.domain.Menu">
        SELECT
<!--        distinct:去重-->

        FROM roles r
        INNER JOIN role_menu_relation rm ON r.`id` = rm.role_id
        INNER JOIN menu m ON rm.menu_id = m.id
        WHERE m.parent_id = -1 AND r.id IN
        <foreach collection="list" item="item" open="(" separator=","
                 close=")">
        #{item}
        </foreach>

    </select>

<!--    根据pid，查询子菜单信息-->
    <select id="findSubMenuByParentId" parameterType="int" resultType="com.myweb.domain.Menu">
        select * from menu where parent_id = #{pid}
    </select>


    <select id="findResouurceByRoleId" parameterType="java.util.List" resultType="com.myweb.domain.Resource">
        SELECT
        DISTINCT rc.*
        FROM roles r
        INNER JOIN role_resource_relation rrr ON r.`id` = rrr.`role_id`
        INNER JOIN resource rc ON rrr.`resource_id` = rc.`id`
        WHERE r.id IN
        <foreach collection="list" item="item" open="(" separator=","
                 close=")">
            #{item}
        </foreach>
    </select>

</mapper>